# Stubs for neomodel.relationship (Python 3)

from typing import Any, Dict, Type, TypeVar

from .core import StructuredNode, db
from .hooks import hooks
from .properties import Property, PropertyManager
from .util import deprecated

T = TypeVar("T")

class RelationshipMeta(type):
    def __new__(mcs: Type[T], name: str, bases: Any, dct: Dict) -> T: ...

class RelationshipBase: ...

StructuredRelBase: Any

class StructuredRel(StructuredRelBase):
    def __init__(self, *args: Any, **kwargs: Any) -> None: ...
    def save(self) -> StructuredRel: ...
    def delete(self) -> None: ...
    def start_node(self) -> StructuredNode: ...
    def end_node(self) -> StructuredNode: ...
    @classmethod
    def inflate(cls, rel: Any) -> "StructuredRel": ...
