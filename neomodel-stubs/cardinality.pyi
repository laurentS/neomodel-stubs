# Stubs for neomodel.cardinality (Python 3)
#

from typing import Any, Dict, List, Optional

# this looks weird, but mypy complains if written in a more usual way
from neomodel import relationship_manager
from neomodel.relationship_manager import RelationshipManager

from .core import StructuredNode
from .relationship import StructuredRel

ZeroOrMore = relationship_manager.ZeroOrMore

class ZeroOrOne(RelationshipManager):
    description: str = ...
    def single(self) -> StructuredNode: ...
    def all(self) -> List[StructuredNode]: ...
    def connect(
        self, node: StructuredNode, properties: Optional[Dict] = ...
    ) -> StructuredRel: ...

class OneOrMore(RelationshipManager):
    description: str = ...
    def single(self) -> StructuredNode: ...
    def all(self) -> List[StructuredNode]: ...
    def disconnect(self, node: Any) -> None: ...

class One(RelationshipManager):
    description: str = ...
    def single(self) -> StructuredNode: ...
    def all(self) -> List[StructuredNode]: ...
    def disconnect(self, node: StructuredNode) -> None: ...
    def disconnect_all(self) -> None: ...
    def connect(
        self, node: StructuredNode, properties: Optional[Dict] = ...
    ) -> StructuredRel: ...
